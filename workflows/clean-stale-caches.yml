name: clean-stale-caches

permissions:
  contents: write
  pull-requests: read
  actions: write

defaults:
  run:
    shell: bash

on:
  workflow_call: 
    inputs:
      prune:
        description: 'Prune all caches'
        required: false
        type: bool
        default: false

jobs:
  clean:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    continue-on-error: true
    steps:
      - name: Clean
        uses: actions/github-script@v7
        with:
          # clean up caches,
          # ref to https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#force-deleting-cache-entries,
          # and https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache.
          script: |
            const owner = context.repo.owner
            const repo = context.repo.repo
            var deleteCaches = new Array()
            
            // get candidate items.
            const { data: cs } = await github.rest.actions.getActionsCacheList({
              owner: owner,
              repo: repo,
            });
            for (const c of cs.actions_caches) {
              // clean closed pull request caches.
              if (c.ref.match(/^refs\/pull\/.*$/)) {
                var prNum = c.ref.replace(/[^\d]/g, "")
                const { data: pr } = await github.rest.pulls.get({
                  owner: owner,
                  repo: repo,
                  pull_number: prNum,
                })
                if (pr.state === 'closed') {
                  deleteCaches.push(c)
                }
                continue
              }
              if ('${{ inputs.workflow_call }}' == 'true') {
                // clean branch caches.
                deleteCaches.push(c)
              }
            }
            
            // delete 
            for (const c of deleteCaches) {
              await github.rest.actions.deleteActionsCacheById({
                owner: owner,
                repo: repo,
                cache_id: c.id,
              })
              console.log(`cleaned cache "${c.key}"`)
            }
